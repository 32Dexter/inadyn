#! /bin/sh -e
## 02_uid_tAndGid_t.dpatch by  <shaul@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Use Unix uid_t and gid_t.

if [ $# -lt 1 ]; then
    echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch} ${2:+-d $2}"

case "$1" in
    -patch)   patch -p1 ${patch_opts} < $0;;
    -unpatch) patch -R -p1 ${patch_opts} < $0;;
    *)
        echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
        exit 1;;
esac

exit 0

@DPATCH@

--- inadyn.orig/src/dyndns.h	2005-02-24 02:05:06.000000000 +0200
+++ src/dyndns.h	2005-03-04 22:51:30.000000000 +0200
@@ -230,8 +230,8 @@
 
 typedef struct
 {
-	int uid;
-	int gid;
+	uid_t uid;
+	gid_t gid;
 } USER_INFO;
 
 typedef struct DYN_DNS_CLIENT
--- inadyn.orig/src/inadyn_cmd.c	2005-02-24 01:25:10.000000000 +0200
+++ src/inadyn_cmd.c	2005-03-05 00:47:27.000000000 +0200
@@ -524,19 +524,19 @@
 	}
 
 	{
-		int gid = -1;
-		int uid = -1;
+		gid_t gid = getuid();
+		uid_t uid = getgid();
 
 		char *p_gid = strstr(p_cmd->argv[current_nr],":");
 		if (p_gid)
 		{
 			if ((strlen(p_gid + 1) > 0) &&  /* if something is present after :*/
-				sscanf(p_gid + 1, "%d",&gid) != 1)
+				sscanf(p_gid + 1, "%u",&gid) != 1)
 			{
 				return RC_DYNDNS_INVALID_OPTION;
 			}
 		}
-		if (sscanf(p_cmd->argv[current_nr], "%d",&uid) != 1)
+		if (sscanf(p_cmd->argv[current_nr], "%u",&uid) != 1)
 		{
 			return RC_DYNDNS_INVALID_OPTION;
 		}
--- inadyn.orig/src/os.h	2005-02-22 23:13:28.000000000 +0200
+++ src/os.h	2005-03-04 22:18:08.000000000 +0200
@@ -94,6 +94,11 @@
     typedef int BOOL;
 #endif
 
+#ifndef UNIX_OS
+    typedef unsigned int uid_t;
+    typedef unsigned int gid_t;
+#endif
+
 
 /* general defines */
 #ifndef SOCKET_ERROR
@@ -139,8 +144,8 @@
 
 typedef struct
 {
-	int uid;
-	int gid;
+	uid_t uid;
+	gid_t gid;
 } OS_USER_INFO;
 
 RC_TYPE os_change_persona(OS_USER_INFO *p_usr_info);
--- inadyn.orig/src/os_unix.c	2005-02-24 00:18:28.000000000 +0200
+++ src/os_unix.c	2005-03-05 00:48:34.000000000 +0200
@@ -179,7 +179,7 @@
 	int rc;
 	do
 	{	 
-		if (p_usr_info->gid != -1) 
+		if (p_usr_info->gid != getgid()) 
 		{
 			if ((rc = setgid(p_usr_info->gid)) != 0)
 			{
@@ -187,7 +187,7 @@
 			}
 		}
 
-		if (p_usr_info->uid != -1) 
+		if (p_usr_info->uid != getuid()) 
 		{			
 			if ((rc = setuid(p_usr_info->uid)) != 0)
 			{
@@ -198,7 +198,7 @@
 	while(0);
 	if (rc != 0)
     {
-		DBG_PRINTF((LOG_WARNING, "Error changing uid/gid. OS err=0x%x\n",errno));
+		DBG_PRINTF((LOG_WARNING, "Error changing uid/gid: %s\n", strerror(errno)));
 		return RC_OS_CHANGE_PERSONA_FAILURE;
 	}
 	return RC_OK;
